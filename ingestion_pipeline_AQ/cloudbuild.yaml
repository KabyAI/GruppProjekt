substitutions:
  _REGION: 'europe-north2'
  _REPO: 'starfish-docker'
  _JOB_NAME: 'ingest-openaq'
  _IMAGE_TAG: 'latest'
  _PROJECT_ID: 'compact-marker-471008-m0'
  _SERVICE_ACCOUNT: 'cloud-run-ingest@compact-marker-471008-m0.iam.gserviceaccount.com'

steps:
  - name: python:3.12-slim
    entrypoint: bash
    args:
      - -c
      - |-
        set -euxo pipefail
        pip install --upgrade pip
        pip install -r ingestion_pipeline_AQ/requirements.txt
        python -m compileall ingestion_pipeline_AQ

  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_JOB_NAME}:${_IMAGE_TAG}'
      - -f
      - ingestion_pipeline_AQ/Dockerfile
      - ingestion_pipeline_AQ

  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_JOB_NAME}:${_IMAGE_TAG}'

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |-
        set -exo pipefail
        # Use the production env file directly (already contains project-specific values)
        cp ingestion_pipeline_AQ/job.env.prod.yaml job.env.rendered.yaml
        COMMIT=${COMMIT_SHA:-local}
        gcloud run jobs deploy ${_JOB_NAME} \
          --image=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_JOB_NAME}:${_IMAGE_TAG} \
          --region=${_REGION} \
          --update-env-vars=^@^GOOGLE_CLOUD_PROJECT=compact-marker-471008-m0@BQ_LOCATION=europe-north2@BQ_DATASET_RAW=raw@BQ_TABLE_RAW=openaq_pm25_ca@DATE_FROM=2022-01-01@DATE_TO=@PARAMETER_ID=2@IDS="2009 2134 1256 8590 232 890 786 791 6836 2057 2156 1186 8721 6767 2822 2781 2945 3795 6606 7035 3548"@IDS_FILE=@OUT_DIR=/tmp/openaq_out@SLEEP_BETWEEN_PAGES=0.4@SLEEP_BETWEEN_SENSORS=1.5@IMAGE_TAG=${_IMAGE_TAG}@COMMIT_SHA=$${COMMIT} \
          --set-secrets=OPENAQ_API_KEY=openaq-api-key:latest \
          --service-account=${_SERVICE_ACCOUNT} \
          --memory=2Gi \
          --max-retries=3 \
          --execution-environment=gen2
        gcloud run jobs describe ${_JOB_NAME} --region=${_REGION}

images:
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_JOB_NAME}:${_IMAGE_TAG}'

